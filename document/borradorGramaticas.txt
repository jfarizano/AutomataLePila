Abstracta

PROGRAM ::= InputAlph = ALPH
          | StackAlph = ALPH
          | States = STATES
          | AccStates = STATES
          | InitState = STATE
          | Transitions = TRANSITIONS
          | RUN STRING


ALPH ::= { SYMBOLS } | { }

SYMBOLS ::= SYMBOL | SYMBOL, SYMBOLS
donde SYMBOL ::= CHAR

STATES ::= { STATES' } | {}

STATES' ::= STATE | STATES', STATE
donde STATE ::= STRING

TRANSITIONS ::= { TRANSITIONS' } | {}

TRANSITIONS' ::=  TRANSITION | TRANSITION, TRANSITIONS' 

TRANSITION ::= (STATE, SYMBOL, SYMBOL, SYMBOL, STATE)